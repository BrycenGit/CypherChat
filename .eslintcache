[{"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\index.js":"1","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\reportWebVitals.js":"2","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\firebase.js":"3","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\reducers\\index.js":"4","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\App.js":"5","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\MessagesControl.js":"6","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\SignOut.js":"7","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\NewMessageForm.js":"8","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\SignIn.js":"9","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\MessagesList.js":"10","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\Message.js":"11","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\reducers\\blank-page-reducer.js":"12","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\actions\\index.js":"13","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\reducers\\chat-selection-reducer.js":"14","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\ChatSelector.js":"15","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\SelectedChat.js":"16","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\Header.js":"17","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\Body.js":"18","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\NewFriendForm.js":"19","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\FriendRequests.js":"20","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\HomePage.js":"21"},{"size":1166,"mtime":1608175761915,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":520,"mtime":1608176305692,"results":"25","hashOfConfig":"23"},{"size":510,"mtime":1608262059439,"results":"26","hashOfConfig":"23"},{"size":228,"mtime":1608574694601,"results":"27","hashOfConfig":"23"},{"size":3341,"mtime":1608664235513,"results":"28","hashOfConfig":"23"},{"size":481,"mtime":1608441338084,"results":"29","hashOfConfig":"23"},{"size":2322,"mtime":1608662741870,"results":"30","hashOfConfig":"23"},{"size":4320,"mtime":1608665295392,"results":"31","hashOfConfig":"23"},{"size":2132,"mtime":1608656555119,"results":"32","hashOfConfig":"23"},{"size":1094,"mtime":1608657291629,"results":"33","hashOfConfig":"23"},{"size":180,"mtime":1608328408815,"results":"34","hashOfConfig":"23"},{"size":200,"mtime":1608260708229,"results":"35","hashOfConfig":"36"},{"size":277,"mtime":1608267785929,"results":"37","hashOfConfig":"23"},{"size":2178,"mtime":1608664108905,"results":"38","hashOfConfig":"23"},{"size":269,"mtime":1608512194794,"results":"39","hashOfConfig":"23"},{"size":2985,"mtime":1608663637218,"results":"40","hashOfConfig":"23"},{"size":641,"mtime":1608492050702,"results":"41","hashOfConfig":"23"},{"size":4685,"mtime":1608663307446,"results":"42","hashOfConfig":"23"},{"size":3398,"mtime":1608662676988,"results":"43","hashOfConfig":"23"},{"size":632,"mtime":1608661039254,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1jvdk8g",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15tkkdi",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\index.js",[],["94","95"],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\reportWebVitals.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\firebase.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\reducers\\index.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\App.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\MessagesControl.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\SignOut.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\NewMessageForm.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\SignIn.js",["96"],"import { useFirestore } from \"react-redux-firebase\";\r\nimport firebase from \"../firebase\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nfunction SignIn(props) {\r\n  const firestore = useFirestore();\r\n\r\n  const [signUp, setSignUp] = useState(false);\r\n  const [signIn, setSignIn] = useState(false);\r\n\r\n  const toggleSignUp = () => {\r\n    setSignUp(!signUp);\r\n  };\r\n\r\n  const toggleSignIn = () => {\r\n    setSignIn(!signIn);\r\n  };\r\n\r\n  function doSignUp(e) {\r\n    e.preventDefault();\r\n    const auth = firebase.auth();\r\n    const email = e.target.email.value;\r\n    const password = e.target.password.value;\r\n    const username = e.target.username.value;\r\n    const firstName = e.target.firstName.value;\r\n    const lastName = e.target.lastName.value;\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((cred) => {\r\n        return firestore.collection(\"users\").doc(cred.user.uid).set({\r\n          email,\r\n          username,\r\n          firstName,\r\n          lastName,\r\n          id: cred.user.uid,\r\n        });\r\n      })\r\n      .then(() => {\r\n        console.log(\"succesful sign up\");\r\n        console.log(auth.currentUser);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  function doSignIn(event) {\r\n    event.preventDefault();\r\n    const auth = firebase.auth();\r\n    const email = event.target.email.value;\r\n    const password = event.target.password.value;\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(function () {\r\n        console.log(\"Successfully signed in!\");\r\n        console.log(auth.currentUser);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n        return error;\r\n      });\r\n  }\r\n  if (signUp) {\r\n    return (\r\n      <>\r\n        <Container>\r\n          <p>New User Form</p>\r\n          <SignInForm onSubmit={doSignUp}>\r\n            <Label htmlFor=\"firstName\">First Name</Label>\r\n            <input name=\"firstName\" type=\"text\" />\r\n            <br />\r\n            <Label htmlFor=\"lastName\">Last Name</Label>\r\n            <input name=\"lastName\" type=\"text\" />\r\n            <br />\r\n            <Label htmlFor=\"email\">Email</Label>\r\n            <input name=\"email\" type=\"text\" />\r\n            <br />\r\n            <Label htmlFor=\"password\">password</Label>\r\n            <input name=\"password\" type=\"password\" />\r\n            <br />\r\n            <Label htmlFor=\"username\">Username</Label>\r\n            <input name=\"username\" type=\"text\" />\r\n            <br />\r\n            <button type=\"submit\">Submit</button>\r\n          </SignInForm>\r\n          <button onClick={toggleSignUp}>Back</button>\r\n        </Container>\r\n      </>\r\n    );\r\n  } else if (signIn) {\r\n    return (\r\n      <>\r\n        <Container>\r\n          <p>Sign In Hi</p>\r\n          <SignInForm onSubmit={doSignIn}>\r\n            <Label htmlFor=\"email\">Email</Label>\r\n            <input name=\"email\" type=\"text\" />\r\n            <br />\r\n            <Label htmlFor=\"password\">password</Label>\r\n            <input name=\"password\" type=\"password\" />\r\n            <br />\r\n            <button type=\"submit\">Submit</button>\r\n          </SignInForm>\r\n          <button onClick={toggleSignIn}>Back</button>\r\n        </Container>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <ButtonContainer>\r\n          <div>\r\n            <h1>CypherChat</h1>\r\n          </div>\r\n          <div>\r\n            <button class btn btn-info onClick={toggleSignIn}>\r\n              Sign In\r\n            </button>\r\n\r\n            <button onClick={toggleSignUp}>Sign Up</button>\r\n          </div>\r\n        </ButtonContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n\r\nconst Container = styled.div`\r\n  margin: 50px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* background-color: red; */\r\n  /* border-radius: 8px; */\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 50px;\r\n  padding: 15px;\r\n  /* flex-direction: column; */\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  /* background-color: red; */\r\n  /* border-radius: 8px; */\r\n`;\r\n\r\nconst SignInForm = styled.form``;\r\n\r\nconst Label = styled.label`\r\n  width: 100px;\r\n`;\r\n","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\MessagesList.js",["97"],"import { useFirestore, isLoaded } from \"react-redux-firebase\";\r\nimport Message from \"./Message\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport NewMessageForm from \"./NewMessageForm\";\r\nimport { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction MessagesList(props) {\r\n  const firestore = useFirestore();\r\n  const { user, recipientEmail } = props;\r\n  const emailArray = [user.email, recipientEmail];\r\n  const sortedEmails = emailArray.sort((a, b) => a.localeCompare(b));\r\n  const collectionName = sortedEmails.join(\"-\");\r\n  const messagesRef = firestore.collection(collectionName).orderBy(\"timeOpen\");\r\n  const [messagesList] = useCollectionData(messagesRef, { idField: \"id\" });\r\n  const dummy = useRef();\r\n\r\n  const messageSent = () => {\r\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  if (isLoaded(messagesList)) {\r\n    return (\r\n      <>\r\n        <MessageBox>\r\n          {messagesList &&\r\n            messagesList.map((msg) => {\r\n              return (\r\n                <Message\r\n                  key={msg.id}\r\n                  user={user}\r\n                  sender={msg.sender}\r\n                  recipient={msg.recipient}\r\n                  title={msg.title}\r\n                  body={msg.body}\r\n                  id={msg.id}\r\n                  key={msg.id}\r\n                />\r\n              );\r\n            })}\r\n          <div ref={dummy}></div>\r\n        </MessageBox>\r\n        <NewMessageForm\r\n          recipientEmail={recipientEmail}\r\n          currentUser={user}\r\n          messageSent={messageSent}\r\n        />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <p>Loading...</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesList;\r\n\r\nconst MessageBox = styled.div`\r\n  width: 800px;\r\n  /* background-color: ##343a40; */\r\n  padding: 15px;\r\n  height: 50vh;\r\n  border-top-left-radius: 4px;\r\n  border-top-right-radius: 4px;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar {\r\n    width: 0.25rem;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: #1e1e24;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #6649b8;\r\n  }\r\n`;\r\n","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\Message.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\reducers\\blank-page-reducer.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\actions\\index.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\reducers\\chat-selection-reducer.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\ChatSelector.js",["98","99","100","101"],"import { useFirestore, isLoaded } from \"react-redux-firebase\";\r\nimport React from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { NavDropdown, Nav, Form, FormControl, Button } from \"react-bootstrap\";\r\n\r\nfunction ChatSelector(props) {\r\n  const firestore = useFirestore();\r\n  const { handleSelectChat, currentUser } = props;\r\n\r\n  const usersRef = firestore\r\n    .collection(\"users\")\r\n    .doc(currentUser.uid)\r\n    .collection(\"friends\");\r\n  // .where(\"email\", \"!=\", currentUser.email);\r\n  const [usersList] = useCollectionData(usersRef, { idField: \"id\" });\r\n\r\n  if (isLoaded(usersList)) {\r\n    return (\r\n      <>\r\n        {/* <div className=\"dropdown\">\r\n          <button className=\"dropbtn\">Friends</button>\r\n          <div className=\"dropdown-content\">\r\n            {usersList.map((user) => {\r\n              return (\r\n                <button\r\n                  key={user.id}\r\n                  onClick={() => handleSelectChat(user.email)}\r\n                >\r\n                  {user.email}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div> */}\r\n        {/* <div className=\"dropdown\">\r\n          <Nav.Link className=\"dropbtn\">Chat</Nav.Link>\r\n          <div className=\"dropdown-content\">\r\n            {usersList.map((user) => {\r\n              return (\r\n                <button\r\n                  key={user.id}\r\n                  onClick={() => handleSelectChat(user.email)}\r\n                >\r\n                  {user.email}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div> */}\r\n        <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n          {usersList.map((user) => {\r\n            return (\r\n              <NavDropdown.Item\r\n                key={user.id}\r\n                onClick={() => handleSelectChat(user.email)}\r\n              >\r\n                {user.email}\r\n              </NavDropdown.Item>\r\n            );\r\n          })}\r\n        </NavDropdown>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <img src=\"https://bit.ly/2LPpEt0\" alt=\"loading\" />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatSelector;\r\n","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\SelectedChat.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\Header.js",["102","103","104","105","106"],"import SignOut from \"./SignOut\";\r\nimport firebase from \"../firebase\";\r\nimport NewFriendForm from \"./NewFriendForm\";\r\nimport ChatSelector from \"./ChatSelector\";\r\nimport styled from \"styled-components\";\r\nimport { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\r\n\r\nconst Header = (props) => {\r\n  const {\r\n    currentUser,\r\n    friendsList,\r\n    resetPage,\r\n    pendingRequestsCount,\r\n    toggleRequests,\r\n    handleSelectChat,\r\n    usersList,\r\n  } = props;\r\n\r\n  function doSignOut() {\r\n    const auth = firebase.auth();\r\n    auth\r\n      .signOut()\r\n      .then(function () {\r\n        console.log(\"Successfully signed out!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <NavBar>\r\n        <div className=\"box\" onClick={resetPage}>\r\n          👽👾🤖\r\n        </div>\r\n        <div className=\"greenColor box\" onClick={toggleRequests}>\r\n          🙋‍♀️{pendingRequestsCount}\r\n        </div>\r\n\r\n        <ChatSelector\r\n          className=\"box\"\r\n          currentUser={currentUser}\r\n          handleSelectChat={handleSelectChat}\r\n        />\r\n\r\n        <NewFriendForm\r\n          className=\"box\"\r\n          currentUser={currentUser}\r\n          usersList={usersList}\r\n          friendsList={friendsList}\r\n        />\r\n\r\n        <SignOut className=\"box\" />\r\n      </NavBar> */}\r\n      <NavContainer>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand onClick={resetPage}>CypherChat</Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link onClick={resetPage}>Home</Nav.Link>\r\n\r\n            <ChatSelector\r\n              className=\"box\"\r\n              currentUser={currentUser}\r\n              handleSelectChat={handleSelectChat}\r\n            />\r\n            <Nav.Link onClick={toggleRequests}>\r\n              Requests <span id=\"count\">{pendingRequestsCount}</span>\r\n            </Nav.Link>\r\n            <Nav.Link onClick={doSignOut}>Sign Out</Nav.Link>\r\n            {/* <SignOut className=\"box\" /> */}\r\n          </Nav>\r\n          {/* <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-info\">Search</Button>\r\n        </Form> */}\r\n          <NewFriendForm\r\n            className=\"box\"\r\n            currentUser={currentUser}\r\n            usersList={usersList}\r\n            friendsList={friendsList}\r\n          />\r\n        </Navbar>\r\n      </NavContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nconst NavBar = styled.div`\r\n  background-color: #333333;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  min-height: 50px;\r\n  .greenColor {\r\n    color: black;\r\n  }\r\n  .box {\r\n    font-size: large;\r\n    height: fit-content;\r\n  }\r\n  #count {\r\n    background-color: white;\r\n  }\r\n`;\r\nconst NavContainer = styled.div`\r\n  #count {\r\n    background-color: white;\r\n    color: #6c757d;\r\n    padding: 3px 8px;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\Body.js",[],"C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\NewFriendForm.js",["107","108","109","110"],"import { useFirestore } from \"react-redux-firebase\";\r\nimport React, { useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport styled from \"styled-components\";\r\nimport { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\r\n\r\nconst NewFriendForm = (props) => {\r\n  const { currentUser, usersList, friendsList } = props;\r\n  const firestore = useFirestore();\r\n\r\n  const sentRequestsRef = firestore\r\n    .collection(\"users\")\r\n    .doc(currentUser.uid)\r\n    .collection(\"sentRequests\");\r\n\r\n  const [sentRequests] = useCollectionData(sentRequestsRef);\r\n\r\n  const myPendingRequestsRef = firestore\r\n    .collection(\"users\")\r\n    .doc(currentUser.uid)\r\n    .collection(\"pendingRequests\");\r\n\r\n  const [myPendingRequests] = useCollectionData(myPendingRequestsRef);\r\n\r\n  const [formValue, setFormValue] = useState(\"\");\r\n\r\n  const usersRef = firestore.collection(\"users\");\r\n\r\n  const checkForMyPendingRequests = (usersEmail) => {\r\n    const array = myPendingRequests.filter((user) => user.email === usersEmail);\r\n    console.log(array);\r\n    if (array.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const checkForSentRequests = (usersEmail) => {\r\n    const array = sentRequests.filter((user) => user.email === usersEmail);\r\n    console.log(array);\r\n    if (array.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const checkForUser = (usersEmail) => {\r\n    const array = usersList.filter((user) => user.email === usersEmail);\r\n    if (array.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const checkForFriend = (usersEmail) => {\r\n    const array = friendsList.filter((user) => user.email === usersEmail);\r\n    if (array.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // const addFriend = async (e) => {\r\n  //   e.preventDefault();\r\n  //   await currentUserRef.doc(e.target.recipientEmail.value).set({\r\n  //     email: e.target.recipientEmail.value,\r\n  //   });\r\n  // };\r\n\r\n  const addToOtherUsersPendingRequest = (userEmail) => {\r\n    usersRef\r\n      .where(\"email\", \"==\", userEmail)\r\n      .get()\r\n      .then((snap) => {\r\n        snap.forEach(function (doc) {\r\n          // doc.data() is never undefined for query doc snapshots\r\n          // console.log(doc.id, \" => \", doc.data());\r\n          usersRef\r\n            .doc(doc.id)\r\n            .collection(\"pendingRequests\")\r\n            .doc(currentUser.email)\r\n            .set({\r\n              email: currentUser.email,\r\n              id: currentUser.uid,\r\n            });\r\n        });\r\n      });\r\n  };\r\n\r\n  const checkIfImUser = (userEmail) => {\r\n    if (currentUser.email === userEmail) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // const addFriend = (e) => {\r\n  //   e.preventDefault();\r\n  //   const selectedUserId = addToOtherUsersPendingRequest(\r\n  //     e.target.recipientEmail.value\r\n  //   );\r\n  //   if (isLoaded(selectedUserId)) {\r\n  //     console.log(selectedUserId);\r\n  //   }\r\n  //   setFormValue(\"\");\r\n  // };\r\n\r\n  const addFriend = (e) => {\r\n    e.preventDefault();\r\n    const input = e.target.recipientEmail.value;\r\n    if (\r\n      !checkIfImUser(input) &&\r\n      checkForUser(input) &&\r\n      !checkForMyPendingRequests(input) &&\r\n      !checkForSentRequests(input) &&\r\n      !checkForFriend(input)\r\n    ) {\r\n      addToOtherUsersPendingRequest(input);\r\n      sentRequestsRef.doc(input).set({\r\n        email: input,\r\n      });\r\n      alert(\"friend requested\");\r\n    } else {\r\n      alert(\"friend not requested\");\r\n    }\r\n    setFormValue(\"\");\r\n  };\r\n  console.log(formValue);\r\n\r\n  return (\r\n    <>\r\n      {/* <FriendForm onSubmit={addFriend}>\r\n        <FriendInput\r\n          name=\"recipientEmail\"\r\n          value={formValue}\r\n          onChange={(e1) => {\r\n            setFormValue(e1.target.value);\r\n            console.log(formValue);\r\n          }}\r\n        />\r\n        <button type=\"Submit\">Send Request</button>\r\n      </FriendForm> */}\r\n      <Form onSubmit={addFriend} inline>\r\n        <FormControl\r\n          name=\"recipientEmail\"\r\n          value={formValue}\r\n          onChange={(e1) => {\r\n            setFormValue(e1.target.value);\r\n            console.log(formValue);\r\n          }}\r\n          placeholder=\"friend@email.com\"\r\n          className=\"mr-sm-2\"\r\n        />\r\n        <Button type=\"submit\" variant=\"outline-light\">\r\n          Add Friend\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewFriendForm;\r\n\r\nconst FriendForm = styled.form`\r\n  background-color: black;\r\n`;\r\n\r\nconst FriendInput = styled.input`\r\n  background-color: black;\r\n`;\r\n","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\FriendRequests.js",["111","112","113"],"import { useFirestore, isLoaded } from \"react-redux-firebase\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nconst FriendRequests = (props) => {\r\n  const firestore = useFirestore();\r\n  const { toggleRequests, currentUser, pendingRequests } = props;\r\n  const [requests, setRequests] = useState(0);\r\n\r\n  const usersRef = firestore.collection(\"users\");\r\n\r\n  const friendsRef = firestore\r\n    .collection(\"users\")\r\n    .doc(currentUser.uid)\r\n    .collection(\"friends\");\r\n\r\n  const pendingRequestsRef = firestore\r\n    .collection(\"users\")\r\n    .doc(currentUser.uid)\r\n    .collection(\"pendingRequests\");\r\n\r\n  const acceptRequest = (userEmail, id) => {\r\n    alert(\"i accept you\");\r\n    friendsRef.doc(userEmail).set({\r\n      email: userEmail,\r\n      id: id,\r\n    });\r\n    usersRef.doc(id).collection(\"friends\").doc(currentUser.email).set({\r\n      email: currentUser.email,\r\n      id: currentUser.uid,\r\n    });\r\n    pendingRequestsRef\r\n      .doc(userEmail)\r\n      .delete()\r\n      .then(() => {\r\n        console.log(\"deleted from requests\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error requests\", error);\r\n      });\r\n    usersRef\r\n      .doc(id)\r\n      .collection(\"sentRequests\")\r\n      .doc(currentUser.email)\r\n      .delete()\r\n      .then(() => {\r\n        console.log(\"succesfully deleted\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error jerror\", error);\r\n      });\r\n  };\r\n\r\n  const denyRequest = (userEmail, id) => {\r\n    alert(\"i deny you\");\r\n    pendingRequestsRef\r\n      .doc(userEmail)\r\n      .delete()\r\n      .then(() => {\r\n        console.log(\"deleted from requests\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error requests\", error);\r\n      });\r\n    usersRef\r\n      .doc(id)\r\n      .collection(\"sentRequests\")\r\n      .doc(currentUser.email)\r\n      .delete()\r\n      .then(() => {\r\n        console.log(\"succesfully deleted\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error jerror\", error);\r\n      });\r\n  };\r\n\r\n  if (isLoaded(pendingRequests)) {\r\n    console.log(pendingRequests.length);\r\n    return (\r\n      <RequestsPage>\r\n        <h1 className=\"title\">\r\n          Pending Requests <span id=\"red\">{pendingRequests.length}</span>\r\n        </h1>\r\n        {pendingRequests.map((user) => {\r\n          return (\r\n            <div className=\"request\" key={user.email}>\r\n              <div>{user.email}</div>\r\n              <div>\r\n                <span onClick={() => denyRequest(user.email, user.id)}>❌</span>\r\n                <span onClick={() => acceptRequest(user.email, user.id)}>\r\n                  ✔\r\n                </span>\r\n              </div>\r\n              {/* <p>\r\n                {pendingRequests.length === 0 ? (\r\n                  <div className=\"request\">You have no Pending Requests</div>\r\n                ) : (\r\n                  console.log(\"some\")\r\n                )}\r\n              </p> */}\r\n            </div>\r\n          );\r\n        })}\r\n      </RequestsPage>\r\n    );\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n};\r\n\r\nexport default FriendRequests;\r\n\r\nconst RequestsPage = styled.div`\r\n  width: 750px;\r\n  .title {\r\n    color: #f8f8f8;\r\n  }\r\n  .request {\r\n    display: flex;\r\n    background-color: #f8f8f8;\r\n    padding: 5px 9px;\r\n    border-radius: 4px;\r\n    justify-content: space-between;\r\n    width: 350px;\r\n  }\r\n  #red {\r\n    color: #ff1654;\r\n  }\r\n`;\r\n","C:\\Users\\Brycen\\Desktop\\capstone-chat\\src\\components\\HomePage.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":37,"column":19,"nodeType":"124","endLine":37,"endColumn":31},{"ruleId":"118","severity":1,"message":"125","line":4,"column":23,"nodeType":"120","messageId":"121","endLine":4,"endColumn":26},{"ruleId":"118","severity":1,"message":"126","line":4,"column":28,"nodeType":"120","messageId":"121","endLine":4,"endColumn":32},{"ruleId":"118","severity":1,"message":"127","line":4,"column":34,"nodeType":"120","messageId":"121","endLine":4,"endColumn":45},{"ruleId":"118","severity":1,"message":"119","line":4,"column":47,"nodeType":"120","messageId":"121","endLine":4,"endColumn":53},{"ruleId":"118","severity":1,"message":"128","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":15},{"ruleId":"118","severity":1,"message":"126","line":6,"column":23,"nodeType":"120","messageId":"121","endLine":6,"endColumn":27},{"ruleId":"118","severity":1,"message":"127","line":6,"column":29,"nodeType":"120","messageId":"121","endLine":6,"endColumn":40},{"ruleId":"118","severity":1,"message":"119","line":6,"column":42,"nodeType":"120","messageId":"121","endLine":6,"endColumn":48},{"ruleId":"118","severity":1,"message":"129","line":91,"column":7,"nodeType":"120","messageId":"121","endLine":91,"endColumn":13},{"ruleId":"118","severity":1,"message":"130","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":16},{"ruleId":"118","severity":1,"message":"125","line":5,"column":18,"nodeType":"120","messageId":"121","endLine":5,"endColumn":21},{"ruleId":"118","severity":1,"message":"131","line":168,"column":7,"nodeType":"120","messageId":"121","endLine":168,"endColumn":17},{"ruleId":"118","severity":1,"message":"132","line":172,"column":7,"nodeType":"120","messageId":"121","endLine":172,"endColumn":18},{"ruleId":"118","severity":1,"message":"133","line":6,"column":11,"nodeType":"120","messageId":"121","endLine":6,"endColumn":25},{"ruleId":"118","severity":1,"message":"134","line":7,"column":10,"nodeType":"120","messageId":"121","endLine":7,"endColumn":18},{"ruleId":"118","severity":1,"message":"135","line":7,"column":20,"nodeType":"120","messageId":"121","endLine":7,"endColumn":31},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Nav' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'SignOut' is defined but never used.","'NavBar' is assigned a value but never used.","'Navbar' is defined but never used.","'FriendForm' is assigned a value but never used.","'FriendInput' is assigned a value but never used.","'toggleRequests' is assigned a value but never used.","'requests' is assigned a value but never used.","'setRequests' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]